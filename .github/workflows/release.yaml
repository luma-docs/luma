name: Release a new version

on:
  workflow_dispatch:

jobs:
  pypi:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.9"

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Configure Poetry
        run: poetry config pypi-token.pypi ${{ secrets.PYPI_API_TOKEN }}

      - name: Bump version
        id: bump_version
        run: |
          # Read current version from pyproject.toml
          CURRENT_VERSION=$(grep -oP '(?<=^version = ")[^"]+' pyproject.toml)
          echo "Current version: $CURRENT_VERSION"

          # Parse semantic version and bump minor version
          IFS='.' read -r major minor patch <<< "$CURRENT_VERSION"
          NEW_MINOR=$((minor + 1))
          NEW_VERSION="${major}.${NEW_MINOR}.0"
          echo "New version: $NEW_VERSION"

          # Update pyproject.toml
          sed -i "s/^version = \".*\"/version = \"$NEW_VERSION\"/" pyproject.toml

          # Update package.json
          sed -i "s/\"version\": \".*\"/\"version\": \"$NEW_VERSION\"/" src/luma/app/package.json

          # Set output for later steps
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: Commit version bump
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add pyproject.toml src/luma/app/package.json
          git commit -m "Bump version to ${{ steps.bump_version.outputs.new_version }}"
          git push

      - name: Build package
        run: poetry build

      - name: Publish package
        run: poetry publish

      - name: Create Git tag
        run: |
          git tag "v${{ steps.bump_version.outputs.new_version }}"
          git push origin "v${{ steps.bump_version.outputs.new_version }}"
